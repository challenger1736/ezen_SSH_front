기본 
0. 지정되지 않은 것들은 변환없이 왠만하면 String(문자열) 자료형
1. ; 와 Enter Key 누를때마다 ~면 이라고 읽기(작성시에도 마찬가지)
2. console.log()를 잘 활용한다 / 스크립트 잘 작동하는지 test용

3. 약간 수학적인 논리를 컴퓨터적으로 해석하기
    - 변수 상수 정하기, 총 몇 자리의 답이 필요한지 (결과 경우의 수) + 비교를 어떻게 할지(총 비교를 몇 번 할지) + 빈 변수 자리들의 개수 계산

4. 서로 다른 자료형들을 존재할때는 + 연결연산자 ('문자열'+  숫자  +'문자열')
    or
    >> 1. ``으로 전체를 감싼다.
    >> 2. 데이터 출력할 위치에 ${데이터}
    ???(`표현식 273+52의 값은 ${273+52} 입니다`)


5. 변수에 쓰이는 연산자들 (증감 +=, -= // 전위 후위 ++,--)

6. .value // 인풋창의 값을 얻어내기! 
    예시 - let value1 = document.querySelector('#input1').value;

7.  document.querySelector('').innerHTML 값을 출력하기
    document.querySelector('#result').innerHTML 
    
        HTML에 입력할 것

        inch 단위 : <input type="text" onchange="변환기능코드가지고있는상자()">
        이벤트 속성 - onchange [변화시]
                    onclick [클릭시]
                    ondrag [드래그시]....

            < function(){} 과 연계됨. > - 버튼의 JS 이름이 onclick 이런 이벤트 속성이라보면됨,,

8. return;는 함수(function)안에서 작동하며 return 이후의 명령들을 실행시키지 않는다.
        - function안의 if 문과 잘 어울림

<<유효성 검사를 위한 항목>>

    undefined 는 값이 지정되지 않은 경우를 의미하지만,
    null 의 경우에는 해당 변수가 어떤 객체도 가리키고 있지 않다는 것을 의미

    - 객체 내 키가 없을때 값 : undefined
    - JSON에서 불러오는 것이 없을 때의 값 : null
    


///////////////////////////////////////////////////////////////////////////////스크립트 주 이용 구조//////////////////////////////////////////////////////////////////////////////


1. 간단한 출력 방법 (console.log(),document.write(),document)
    1-1. 경고창에 출력하기 [alert() 함수]
    alert("안녕 자바스크립트"); alert(10+10);

    ★ 1-2. 콘솔에 출력하기 [console.log() 함수] ★
    console.log("안녕 자바스크립트1") ;console.log(10+10) ;                                                       

    1-3. 확인창(확인/취소)에 출력하기[confirm() ]함수
    confirm("안녕 자바스크립트2"); confirm(10+10)

    1-4. 입력창 입력상자[input], 확인=입력값 반환 / 취소=false  [prompt() ]함수
    prompt("안녕 자바스크립트3"); prompt (10+10);

    1-5. HTML에 출력하기 [document.write()] 함수
    document.write("안녕 자바스크립트4"); document.write (10+10);




                ★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
                ★ 1-5-1. HTML에 특정 요소/마크업 출력하기 [document.마크업식별.innerHTML ] ★
                document.body.innerHTML = "안녕 자바스크립트"
                document.body.innerHTML = 10+10
                document.querySelector('h3').innerHTML

                예시 // 결과 = input에 입력 받은 value를 h3 [innerHTML = 마크업 사이에] 에 대입

                HTML에 입력할 것

                inch 단위 : <input type="text" onchange="변환기능코드가지고있는상자()">
                이벤트 속성 - onchange [변화시]
                            onclick [클릭시]
                            ondrag [드래그시]....

                    < function(){} 과 연계됨. >

                const 인치 = document.querySelector('input');
                console.log(인치);
                console.log(인치.value);

                ★ document.querySelector('h3').innerHTML = `${인치.value*2.54}cm`        ★
                ★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
    




2. let, var, const 등의 이름 값 붙이기
    let (이름[변수]) = 
    var (이름[변수]) =
    const (이름[상수]) =
                1-1. prompt / 시스템 알림 창
                        = prompt('시스템 알림 창으로 입력 값 받기')

                1-2. Number() / 숫자 자료형으로 뽑아낼 것 [+ '' / 문자열로 뽑아 낼 것 // Boolean() / 참 거짓으로 뽑아 낼 것 ] ★ 대문자로 사용해야함 ★

                1-3. parseInt() / 숫자 자료형으로 뽑아내기 + 뒤의 소숫점자리 버리고 정수만 쓸 것.


3. if 조건(Boolean)문 // { } 쓰는거 들여쓰기 잘하기! 다른 것에 대입은 안된다.
    3-1. (조건 T/F) ? T결과 : F결과; 예> 7의 배수이면서 홀수인 수 (이름%7==0 && 이름%2==1) ? "그렇다" : "아니다"                 !! 여러 조건 &&나 || ()안 묶기 !!

    //삼항 연산자 조건? 참 : 거짓
    //삼항 연산자 2중첩 조건 1 ? 참1 : 조건 2 ? 참2 : 거짓
    //삼항 연산자 3중첩 조건 1 ? 참1 : 조건 2 ? 참2 : 조건 3 ? 참 3 : 거짓

    // 중첩 많아지면 관리가 힘들다 ====> 조건문 if를 쓰는거임 그래서.

    3-2. if(){} // 참일때만 실행
        if(boolean 값이 나오는 표현식(T/F)){참(T)일때 실행코드;};

    3-3. if(){}else{} //참 또는 거짓 둘 다 실행
        if(T/F){참/T일때 실행코드;}else{거짓/F일떄 실행코드}

    3-4. if 안의 if // = function안의 return;을 쓰는게 나은 것 같다.
        if(T/F){                                    ---------------------- 성별이 남자 중에서
            if(T/F){}                                   ------------------- 대학교O/X
            else{}
        } else{                                     ---------------------- 성별이 여자 중에서
            if(T/F){}                                   ------------------- 대학교O/X
            else{}
        }
    3-5. if(){}else if(){}...else{}//다수 조건 일때
     
        결과 1개 (하나의 문장으로 침)                           결과 5개  ( 차이점 )

        if(조건 1){}                                        if(조건 1){}
        else if(조건 2){}                                   if(조건 1){}
        else if(조건 3){}                                   if(조건 1){}
        else if(조건 4){}                                   if(조건 1){}
        else {}...                                          if(조건 1){}

    3-6. switch(과정){case 결과1 : 실행코드; break;
                      case 결과2 : 실행코드; break;
                      case 결과3 : 실행코드; break;}

4. 배열 // 연계되는 문법 - const 빈 배열을 지정해서, function(){}으로 조건이 맞을 시 .push, .splice 등으로 처리
    4-1. 배열 선언
            -let 변수/상수명 = [요소, 요소, 요소]

    4-2. 배열 요소 개수 확인
            배열.length

    4-3. 배열 뒷부분에 요소 추가하기
            배열.push( 마지막 인덱스 추가할 요소 );----------------------숫자가 나옴

         - 중간 삽입
            배열.splice(중간삽입할 요소의 인덱스위치, 0 , 추가할 요소의 값)

    4-4. 배열 요소 제거하기
            배열.splice(제거할 요소 의 인덱스부터, 제거할 요소의 개수)
                - 배열.splice(0) : 배열 요소 전체 삭제

            - 값을 이용한 삭제 : 배열.splice(indexof값, 1)
    4-5. 배열내 특정 값의 위치 찾기
            배열.indexof(값); ------------------------------------------숫자가 나옴
                - 배열내 동일한 값이 있으면 인덱스번호 반환, 없으면 -1

5. for문
        for(초기값 ; 조건문 ; 증감식){실행코드};
    5-1.★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★ for문에 for가 들어간다면 ; ★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
   for 문 하나 당(한개의 수, 1열)당 여러 개의 값을 비교하거나 대입하거나 나오게 할 때 쓰이는 문법이다.
   ex> for안의 for안의 for면 첫 for에서 나오는 값 하나당 두번째 for에서 갯수만큼 나오는거 또 하나당 세번째 for가 갯수만 큼 나오는 형식이 된다.

    5-2. 어디까지만 반복 문 실행하고 계속 다음 반복으로 진행되게 하려면 continue;
    ex> for(초기값;조건;증감){if(조건){continue;} 실행문;} 같은 형식이라면 if가 참일때는 아무것도 안하고 그 후 다음 증감식으로 넘어간다.

    5-3 for문을 쓸 때는 줄로 생각한다. for 여러개면 한 줄 안에 하나의 값에서 또 줄 들이 생겨나게 하는 것,,

6. 객체
    6-0. 형태: 무조건 {  키 : 값 (값은 배열, 객체, 함수 등등도 가능)  } 이런 형태
    6-1. 객체명.keyName : 객체의 해당하는 키의 값을 호출
    6-1-1. 객체명.keyName() : 객체의 해당하는 키의 펑션을 호출

    6-2. 객체명.keyName : 이런 방식으로 없던 키에 값 넣기도 가능! 바꾸기도 가능!
    6-3. delete 객체명.keyName : 이런 방식으로 키 없애기도 가능!


4. 해당 문자열의 0번째(첫번째) 문자 불러오기[0]
    "안녕하세요"[0] = 안
    "안녕하세요"[1] = 녕

5. 문자열의 길이를 숫자(자료형)로 = .length
    "안녕하세요".length = 5 


   
///////////////////////////////////////////가끔 쓸 거 같은 기능//////////////////////////////////

1. const date = new Date(); // new Date(); 현재시간을 알려주는 코드[클래스:미리 만들어진 구조/코드] , 빈 칸 매개변수가 들어감, 지금 상황에 중요한 내용은 아님!
        console.log(date);
        const hour = date.getHours() // 현재시간.getHours() : 현재시간에서 시분초 중에서 시를 반환 함수
        console.log(hour);


유재석 branch에서 코드 작성